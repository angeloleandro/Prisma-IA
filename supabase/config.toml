# Identificador único para o projeto local
project_id = "chatbotui"

[api]
# Habilitar API para desenvolvimento local
enabled = true
# Porta que será utilizada para a API
port = 54321
# Esquemas que serão expostos na API local
schemas = ["public", "storage", "graphql_public"]
# Esquemas adicionais no search_path para cada solicitação
extra_search_path = ["public", "extensions"]
# Limite máximo de linhas que podem ser retornadas para evitar grandes payloads
max_rows = 1000

[db]
# Porta para o banco de dados local
port = 54322
# Porta usada pelo comando `db diff` para inicializar o banco de sombra
shadow_port = 54320
# Versão principal do banco de dados, deve ser igual à versão remota
major_version = 15

[db.pooler]
# Pool de conexões desativado no ambiente local
enabled = false
# Porta utilizada pelo pooler de conexões
port = 54329
# Modo do pooler de conexões (sessão ou transação)
pool_mode = "transaction"
# Tamanho padrão do pool de conexões
default_pool_size = 20
# Número máximo de conexões de clientes
max_client_conn = 100

[studio]
# Habilitar o Supabase Studio para desenvolvimento
enabled = true
# Porta utilizada pelo Supabase Studio
port = 54323
# URL externa da API local
api_url = "http://localhost"

[inbucket]
# Habilitar o servidor de testes de email no ambiente local
enabled = true
# Porta utilizada para o web interface de testes de email
port = 54324
# Portas opcionais para SMTP e POP3 (comentadas)
# smtp_port = 54325
# pop3_port = 54326

[storage]
# Limite de tamanho de arquivos permitidos no armazenamento local
file_size_limit = "50MiB"

[auth]
# URL base do site para autenticação
site_url = "http://localhost:3000"
# URLs adicionais permitidas para redirecionamento pós-autenticação
additional_redirect_urls = ["http://localhost:3000"]
# Tempo de expiração dos tokens JWT (padrão: 1 semana)
jwt_expiry = 604800
# Habilitar rotação de tokens de atualização (refresh tokens)
enable_refresh_token_rotation = true
# Intervalo de reutilização de tokens de atualização
refresh_token_reuse_interval = 10
# Permitir novos cadastros de usuários
enable_signup = true

[auth.email]
# Permitir novos cadastros de usuários via email
enable_signup = true
# Exigir confirmação de mudança de email nas duas contas (antiga e nova)
double_confirm_changes = true
# Exigir confirmação de email antes de login
enable_confirmations = false

[auth.sms]
# Permitir novos cadastros de usuários via SMS
enable_signup = true
# Não exigir confirmação de número de telefone antes de login
enable_confirmations = false

# Configuração de provedores SMS (exemplo: twilio)
[auth.sms.twilio]
enabled = false
account_sid = ""
message_service_sid = ""
# Variável de ambiente para o token de autenticação do Twilio
auth_token = "env(SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN)"

# Configuração de provedores OAuth externos
[auth.external.google]
enabled = true
client_id = "SEU_GOOGLE_CLIENT_ID"
# Variável de ambiente para o segredo de autenticação do Google
secret = "SEU_GOOGLE_CLIENT_SECRET"

[auth.external.github]
enabled = true
client_id = "SEU_GITHUB_CLIENT_ID"
# Variável de ambiente para o segredo de autenticação do GitHub
secret = "SEU_GITHUB_CLIENT_SECRET"
redirect_uri = "http://localhost:3000/auth/callback"

[analytics]
# Habilitar analytics no ambiente local (opcional)
enabled = false
port = 54327
vector_port = 54328
# Backend de analytics utilizado
backend = "postgres"